name: DCSA-OVS-Notifications MASTER CI

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Fetch backend
      uses: actions/checkout@v2
      with:
        path: DCSA-OVS-Notifications
        submodules: recursive
    - name: Set up Java JDK
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: maven-settings-xml-action
      uses: whelk-io/maven-settings-xml-action@v12
      with:
        repositories: '[{ "id": "github", "name": "DCSA Backend repo", "url": "https://maven.pkg.github.com/dcsaorg/DCSA-Core", "releases": { "enabled": "true" }, "snapshots": { "enabled": "true" } }]'
        servers: '[{ "id": "github", "username": "${{ secrets.DCSA_USER }}", "password": "${{ secrets.DCSA_PACKAGES_PAT }}" }]'

    - name: Build API
      run: cd DCSA-OVS-Notifications && mvn package -X

    - name: Run the OVS Notifications microservice plus database
      run: cd DCSA-OVS-Notifications && docker-compose -f docker-compose.yml up -d -V

    - name: Fetch Backend Status
      run: |
        sleep 10
        echo "::set-output name=STATUS::$(curl -s http://localhost:9092/v2/actuator/health | jq -r '.status')"
      id: healthcheck

    - name: Confirm microservice status
      if: ${{ steps.healthcheck.outputs.STATUS == 'UP' }}
      run: |
        echo "The DCSA-OVS-Notifications service is UP."

    - name: Confirm microservice status
      if: ${{ steps.healthcheck.outputs.STATUS != 'UP' }}
      uses: actions/github-script@v3
      with:
        script: |
          core.setFailed('The DCSA-OVS-Notifications service is down.')